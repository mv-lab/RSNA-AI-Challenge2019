Loading module for GNU compilers
GNU 6.4.0 is now loaded
Loading module for Miniconda
Miniconda 3 is now loaded
+ bash bin/train_pred005f1.sh
+ model=model005
+ gpu=0
+ fold=1
+ conf=./conf/model005.py
+ python -m src.cnn.main train ./conf/model005.py --fold 1 --gpu 0
/home/xum/.conda/envs/kaggler/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:73: UserWarning: Seems like `optimizer.step()` has been overridden after learning rate scheduler initialization. Please, make sure to call `optimizer.step()` before `lr_scheduler.step()`. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
+ ep=1
+ tta=5
+ clip=1e-6
+ snapshot=./model/model005/fold1_ep1.pt
+ valid=./model/model005/fold1_ep1_valid_tta5.pkl
+ test=./model/model005/fold1_ep1_test_tta5.pkl
+ sub=./data/submission/model005_fold1_ep1_test_tta5.csv
+ python -m src.cnn.main test ./conf/model005.py --snapshot ./model/model005/fold1_ep1.pt --output ./model/model005/fold1_ep1_test_tta5.pkl --n-tta 5 --fold 1 --gpu 0
+ python -m src.postprocess.make_submission --input ./model/model005/fold1_ep1_test_tta5.pkl --output ./data/submission/model005_fold1_ep1_test_tta5.csv --clip 1e-6
+ kaggle competitions submit rsna-intracranial-hemorrhage-detection -m 'efficientnet-b7 on v100' -f ./data/submission/model005_fold1_ep1_test_tta5.csv
  0%|          | 0.00/20.6M [00:00<?, ?B/s]  0%|          | 8.00k/20.6M [00:00<23:51, 15.1kB/s]  0%|          | 48.0k/20.6M [00:00<17:10, 20.9kB/s]  0%|          | 80.0k/20.6M [00:00<12:37, 28.4kB/s]  1%|          | 160k/20.6M [00:01<09:03, 39.5kB/s]   2%|▏         | 368k/20.6M [00:01<06:22, 55.5kB/s]  3%|▎         | 688k/20.6M [00:01<04:27, 78.2kB/s]  6%|▌         | 1.28M/20.6M [00:03<03:15, 103kB/s] 12%|█▏        | 2.56M/20.6M [00:03<02:08, 147kB/s] 18%|█▊        | 3.73M/20.6M [00:03<01:24, 209kB/s] 24%|██▍       | 5.04M/20.6M [00:03<00:55, 296kB/s] 31%|███       | 6.34M/20.6M [00:05<00:41, 364kB/s] 50%|████▉     | 10.2M/20.6M [00:05<00:21, 517kB/s] 59%|█████▉    | 12.2M/20.6M [00:05<00:12, 723kB/s] 70%|███████   | 14.5M/20.6M [00:05<00:06, 1.01MB/s] 82%|████████▏ | 16.9M/20.6M [00:05<00:02, 1.39MB/s] 94%|█████████▎| 19.3M/20.6M [00:06<00:00, 1.91MB/s]100%|██████████| 20.6M/20.6M [00:08<00:00, 2.62MB/s]
